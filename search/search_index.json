{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Me Benjamin Daniels is a Research Analyst in the Development Research Group (Human Development and Impact Evaluation teams) at the World Bank. Benjamin\u2019s research focuses on the delivery of high-quality primary health care in developing contexts. His work has highlighted the importance of direct measurement of health care provider knowledge, effort, and practice. To that end, he has supported some the largest research studies to date utilizing clinical vignettes, provider observation, and standardized patients. Benjamin works with the QuTUB Project . Benjamin works with DIME Analytics to create tools that improve the quality and reproducibility of development research. There, he supports best practices in econometrics, statistical programming, and research reproducibility across the i2i portfolio. This work comprises code and process development, research personnel training, and direct support for data analysis and survey development. These tools include software products like the World Bank Stata GitHub , ietoolkit , and research resources like the DIME Wiki . Academic Publications Variations in the quality of tuberculosis care in urban India: A cross-sectional, standardized patient study in two cities ( Plos Medicine | GitHub ) Use of standardised patients to assess quality of healthcare in Nairobi, Kenya: a pilot, cross-sectional study with international comparisons ( BMJ Global Health | GitHub ) Use of standardised patients to assess quality of tuberculosis care: a pilot, cross-sectional study ( The Lancet Infectious Diseases | GitHub ) Use of standardised patients to assess antibiotic dispensing for tuberculosis by pharmacies in urban India: a cross-sectional study ( The Lancet Infectious Diseases | GitHub ) Social equity issues in the distribution of feed-in tariff policy benefits: A cross sectional analysis from England and Wales using spatial census and policy data ( Energy Policy ) Examining the quality of medicines at Kenyan healthcare facilities: a validation of an alternative post-market surveillance model that uses standardized patients ( Drugs - Real World Outcomes ) Human Capital Accumulation and Disasters: Evidence from the Pakistan Earthquake of 2005 ( NEUDC 2018 )","title":"About Me"},{"location":"#about-me","text":"Benjamin Daniels is a Research Analyst in the Development Research Group (Human Development and Impact Evaluation teams) at the World Bank. Benjamin\u2019s research focuses on the delivery of high-quality primary health care in developing contexts. His work has highlighted the importance of direct measurement of health care provider knowledge, effort, and practice. To that end, he has supported some the largest research studies to date utilizing clinical vignettes, provider observation, and standardized patients. Benjamin works with the QuTUB Project . Benjamin works with DIME Analytics to create tools that improve the quality and reproducibility of development research. There, he supports best practices in econometrics, statistical programming, and research reproducibility across the i2i portfolio. This work comprises code and process development, research personnel training, and direct support for data analysis and survey development. These tools include software products like the World Bank Stata GitHub , ietoolkit , and research resources like the DIME Wiki .","title":"About Me"},{"location":"#academic-publications","text":"Variations in the quality of tuberculosis care in urban India: A cross-sectional, standardized patient study in two cities ( Plos Medicine | GitHub ) Use of standardised patients to assess quality of healthcare in Nairobi, Kenya: a pilot, cross-sectional study with international comparisons ( BMJ Global Health | GitHub ) Use of standardised patients to assess quality of tuberculosis care: a pilot, cross-sectional study ( The Lancet Infectious Diseases | GitHub ) Use of standardised patients to assess antibiotic dispensing for tuberculosis by pharmacies in urban India: a cross-sectional study ( The Lancet Infectious Diseases | GitHub ) Social equity issues in the distribution of feed-in tariff policy benefits: A cross sectional analysis from England and Wales using spatial census and policy data ( Energy Policy ) Examining the quality of medicines at Kenyan healthcare facilities: a validation of an alternative post-market surveillance model that uses standardized patients ( Drugs - Real World Outcomes ) Human Capital Accumulation and Disasters: Evidence from the Pakistan Earthquake of 2005 ( NEUDC 2018 )","title":"Academic Publications"},{"location":"snippets/boilerplate/","text":"Your Page Title Put any cool message you want here. You should also put a link the new page here\u2026 just in case it doesn't refresh.","title":"Boilerplate"},{"location":"stata-code/betterbar/","text":"Bar graphs with CIs Making graphs with confidence intervals in Stata is now easy! Here's an example using betterbar : 1 2 3 4 5 6 7 8 9 10 11 ssc install betterbar global tw_opts /// title(, justification(left) color(black) span pos( 11 )) /// graphregion(color(white) lc(white) lw(med)) bgcolor(white) /// ylab(,angle( 0 ) nogrid) xtit(,placement(left) justification(left)) /// yscale(noline) xscale(noline) legend(region(lc(none) fc(none))) sysuse auto . dta , clear betterbarci headroom trunk mpg , over(foreign) ${tw_opts } betterbar is available on SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like betterbar , be sure to visit my homepage and Stata boilerplate code .","title":"Bar graphs with CIs"},{"location":"stata-code/betterbar/#bar-graphs-with-cis","text":"Making graphs with confidence intervals in Stata is now easy! Here's an example using betterbar : 1 2 3 4 5 6 7 8 9 10 11 ssc install betterbar global tw_opts /// title(, justification(left) color(black) span pos( 11 )) /// graphregion(color(white) lc(white) lw(med)) bgcolor(white) /// ylab(,angle( 0 ) nogrid) xtit(,placement(left) justification(left)) /// yscale(noline) xscale(noline) legend(region(lc(none) fc(none))) sysuse auto . dta , clear betterbarci headroom trunk mpg , over(foreign) ${tw_opts } betterbar is available on SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like betterbar , be sure to visit my homepage and Stata boilerplate code .","title":"Bar graphs with CIs"},{"location":"stata-code/crossfold/","text":"K-fold cross-validation Description crossfold performs k-fold cross-validation on a specified model in order to evaluate a model's ability to fit out-of-sample data. Example 1 2 3 4 5 6 7 8 9 10 11 . ssc install crossfold . sysuse nlsw88 , clear . crossfold reg wage union | RMSE -------------+----------- est1 | 4.171849 est2 | 4.105884 est3 | 4.038483 est4 | 4.151482 est5 | 4.171727 This procedure splits the data randomly into k partitions, then for each partition it fits the specified model using the other k-1 groups and uses the resulting parameters to predict the dependent variable in the unused group. Finally, crossfold reports a measure of goodness-of-fit from each attempt. The default evaluation metric is root mean squared error (RMSE). Syntax 1 2 3 4 5 crossfold model [model_if] [model_in] [model_weight], [eif()] [ein()] [eweight(varname)] [stub(string)] [k(value)] [loud] [mae] [r2] [model_options] 1 2 3 4 5 6 7 8 9 10 11 12 Options Description ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- eif; ein Error evaluation if and in specifications place restrictions on the out-of-sample set that should be fit. Modelling if and in restrictions should be specified with the model. eweight Weighting for error evaluation purposes. Model weights, identical or not, should be specified after the model. stub() Specifies a stub name for naming estimation results and for the results matrix. The default is est. k() Specifies a number of folds to carry out. The default is 5, and k cannot exceed 300 or the number of observations. loud Displays each model as it is fit. mae Calculates mean absolute errors (MAE) instead of RMSE. r2 Calculates psuedo-R-squared (the square of the correlation coefficient of the predicted and actual values of the dependent variable) instead of RMSE. model_options Modelling command options (such as fe for xtreg). ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- crossfold is available on SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like crossfold , be sure to visit my homepage and Stata boilerplate code .","title":"K-fold cross-validation"},{"location":"stata-code/crossfold/#k-fold-cross-validation","text":"","title":"K-fold cross-validation"},{"location":"stata-code/crossfold/#description","text":"crossfold performs k-fold cross-validation on a specified model in order to evaluate a model's ability to fit out-of-sample data.","title":"Description"},{"location":"stata-code/crossfold/#example","text":"1 2 3 4 5 6 7 8 9 10 11 . ssc install crossfold . sysuse nlsw88 , clear . crossfold reg wage union | RMSE -------------+----------- est1 | 4.171849 est2 | 4.105884 est3 | 4.038483 est4 | 4.151482 est5 | 4.171727 This procedure splits the data randomly into k partitions, then for each partition it fits the specified model using the other k-1 groups and uses the resulting parameters to predict the dependent variable in the unused group. Finally, crossfold reports a measure of goodness-of-fit from each attempt. The default evaluation metric is root mean squared error (RMSE).","title":"Example"},{"location":"stata-code/crossfold/#syntax","text":"1 2 3 4 5 crossfold model [model_if] [model_in] [model_weight], [eif()] [ein()] [eweight(varname)] [stub(string)] [k(value)] [loud] [mae] [r2] [model_options] 1 2 3 4 5 6 7 8 9 10 11 12 Options Description ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- eif; ein Error evaluation if and in specifications place restrictions on the out-of-sample set that should be fit. Modelling if and in restrictions should be specified with the model. eweight Weighting for error evaluation purposes. Model weights, identical or not, should be specified after the model. stub() Specifies a stub name for naming estimation results and for the results matrix. The default is est. k() Specifies a number of folds to carry out. The default is 5, and k cannot exceed 300 or the number of observations. loud Displays each model as it is fit. mae Calculates mean absolute errors (MAE) instead of RMSE. r2 Calculates psuedo-R-squared (the square of the correlation coefficient of the predicted and actual values of the dependent variable) instead of RMSE. model_options Modelling command options (such as fe for xtreg). ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- crossfold is available on SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like crossfold , be sure to visit my homepage and Stata boilerplate code .","title":"Syntax"},{"location":"stata-code/dta2kml/","text":"KML files Making KML files in Stata is now easy! Here's an example using dta2kml : 1 2 3 4 5 6 7 8 ssc install dta2kml clear set obs 100 gen lat = rnormal( ) + 38 gen lon = rnormal( ) - 77 dta2kml using \"demo.kml\" , lat(lat) lon(lon) replace Syntax 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 dta2kml using filename [if] [in], [replace] latitude(varname) longitude(varname) [altitude(varname)] [lines(group_var index_var)] [point_options] Options Description ------------------------------------------------------------------------ Line Options lines() Specify the grouping variable (unique for each line ) and the index variable, ranging from 1 to n consecutively for each element. If lines() is specified only this type of data can be used. Point Options folders() Indicates a variable containing folder names. names() Indicates a variable containing placemark names. icons() Indicates a variable containing the full URLs of the desired icons from the libraries located at http: //kml4earth.appspot.com/icons.html. If this option is not specified, all placemarks display the default icon. descriptions() Indicates a variable containing descriptions to attach to the placemarks. ------------------------------------------------------------------------ dta2kml is available on SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like dta2kml , be sure to visit my homepage and Stata boilerplate code .","title":"KML files"},{"location":"stata-code/dta2kml/#kml-files","text":"Making KML files in Stata is now easy! Here's an example using dta2kml : 1 2 3 4 5 6 7 8 ssc install dta2kml clear set obs 100 gen lat = rnormal( ) + 38 gen lon = rnormal( ) - 77 dta2kml using \"demo.kml\" , lat(lat) lon(lon) replace","title":"KML files"},{"location":"stata-code/dta2kml/#syntax","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 dta2kml using filename [if] [in], [replace] latitude(varname) longitude(varname) [altitude(varname)] [lines(group_var index_var)] [point_options] Options Description ------------------------------------------------------------------------ Line Options lines() Specify the grouping variable (unique for each line ) and the index variable, ranging from 1 to n consecutively for each element. If lines() is specified only this type of data can be used. Point Options folders() Indicates a variable containing folder names. names() Indicates a variable containing placemark names. icons() Indicates a variable containing the full URLs of the desired icons from the libraries located at http: //kml4earth.appspot.com/icons.html. If this option is not specified, all placemarks display the default icon. descriptions() Indicates a variable containing descriptions to attach to the placemarks. ------------------------------------------------------------------------ dta2kml is available on SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like dta2kml , be sure to visit my homepage and Stata boilerplate code .","title":"Syntax"},{"location":"stata-code/forest/","text":"Treatment effect graphs Visualizing treatment effects on multiple outcomes with Stata is now easy! Here's an example using forest : 1 2 3 4 5 6 7 8 global tw_opts /// title(, justification(left) color(black) span pos( 11 )) /// graphregion(color(white) lc(white) lw(med)) bgcolor(white) /// ylab(,angle( 0 ) nogrid) xtit(,placement(left) justification(left)) /// yscale(noline) xscale(noline) legend(region(lc(none) fc(none))) sysuse auto . dta , clear forest reg mpg headroom trunk = displacement , graph ( $tw_opts ) forest visualizes results from multiple regressions on a single independent variable. The resulting \"forest\" chart shows the effect of a single treatment variable of interest on a set of independent variables. It can display raw coefficients, standardized effect sizes (Cohen's d), or odds ratios (from logistic regressions). It can also make Bonferroni corrections to the confidence intervals for multiple comparisons. Syntax 1 2 3 4 forest estimator depvars = treatment [if] [in] , [weight(weight)] [controls(varlist)] [graphopts(twoway_options)] [or|d] [bonferroni] [est_options] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Syntax Description ------------------------------------------------------------------------------------- estimator Indicates the estimation command to be utilized. depvars List the left-hand-side variables. treatment List the independent variable of interest. or|d Request effect sizes as odds ratios (by exponentiating regression coefficients where possible) or in terms of Cohen's d (by standardizing the dependent variables). (Choose only one.) bonferroni Request confidence intervals calculated with Bonferroni correction for simultaneous comparisons. This is calculated by adjusting the significance level to (100-5/(number of regressions)). weight() Specify weights. controls() Specify controls. graphopts() Set any desired options for the graph. est_options Specify any options needed for the estimator. ------------------------------------------------------------------------------------- forest is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like forest , be sure to visit my homepage and Stata boilerplate code .","title":"Treatment effect graphs"},{"location":"stata-code/forest/#treatment-effect-graphs","text":"Visualizing treatment effects on multiple outcomes with Stata is now easy! Here's an example using forest : 1 2 3 4 5 6 7 8 global tw_opts /// title(, justification(left) color(black) span pos( 11 )) /// graphregion(color(white) lc(white) lw(med)) bgcolor(white) /// ylab(,angle( 0 ) nogrid) xtit(,placement(left) justification(left)) /// yscale(noline) xscale(noline) legend(region(lc(none) fc(none))) sysuse auto . dta , clear forest reg mpg headroom trunk = displacement , graph ( $tw_opts ) forest visualizes results from multiple regressions on a single independent variable. The resulting \"forest\" chart shows the effect of a single treatment variable of interest on a set of independent variables. It can display raw coefficients, standardized effect sizes (Cohen's d), or odds ratios (from logistic regressions). It can also make Bonferroni corrections to the confidence intervals for multiple comparisons.","title":"Treatment effect graphs"},{"location":"stata-code/forest/#syntax","text":"1 2 3 4 forest estimator depvars = treatment [if] [in] , [weight(weight)] [controls(varlist)] [graphopts(twoway_options)] [or|d] [bonferroni] [est_options] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Syntax Description ------------------------------------------------------------------------------------- estimator Indicates the estimation command to be utilized. depvars List the left-hand-side variables. treatment List the independent variable of interest. or|d Request effect sizes as odds ratios (by exponentiating regression coefficients where possible) or in terms of Cohen's d (by standardizing the dependent variables). (Choose only one.) bonferroni Request confidence intervals calculated with Bonferroni correction for simultaneous comparisons. This is calculated by adjusting the significance level to (100-5/(number of regressions)). weight() Specify weights. controls() Specify controls. graphopts() Set any desired options for the graph. est_options Specify any options needed for the estimator. ------------------------------------------------------------------------------------- forest is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like forest , be sure to visit my homepage and Stata boilerplate code .","title":"Syntax"},{"location":"stata-code/knapsack/","text":"Knapsack solver Stata can now solve constrained optimization problems of the \"knapsack\" variety! Given a budget constraint and a dataset of items with prices and values, knapsack will calculate the most valuable obtainable combination under the given budget, and returns those items and their total value. Here's an example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 . sysuse auto . dta, clear ( 1978 Automobile Data) . keep mpg price . rename (mpg price)(cost value) . knapsack 500 , p(cost) v(value) gen (chosen) ( 74 missing values generated) Maximum Total Price = 253853 . di \" ` r(max) ' \" 253853 . table chosen , c( sum cost sum value) ---------------------------------- chosen | sum (cost) sum (value) ----------+----------------------- 0 | 1076 202376 1 | 500 253853 ---------------------------------- knapsack is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like knapsack , be sure to visit my homepage and Stata boilerplate code .","title":"Knapsack solver"},{"location":"stata-code/knapsack/#knapsack-solver","text":"Stata can now solve constrained optimization problems of the \"knapsack\" variety! Given a budget constraint and a dataset of items with prices and values, knapsack will calculate the most valuable obtainable combination under the given budget, and returns those items and their total value. Here's an example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 . sysuse auto . dta, clear ( 1978 Automobile Data) . keep mpg price . rename (mpg price)(cost value) . knapsack 500 , p(cost) v(value) gen (chosen) ( 74 missing values generated) Maximum Total Price = 253853 . di \" ` r(max) ' \" 253853 . table chosen , c( sum cost sum value) ---------------------------------- chosen | sum (cost) sum (value) ----------+----------------------- 0 | 1076 202376 1 | 500 253853 ---------------------------------- knapsack is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like knapsack , be sure to visit my homepage and Stata boilerplate code .","title":"Knapsack solver"},{"location":"stata-code/makeid/","text":"Unique IDs Making best-practice unique IDs in Stata is now easy! Here's an example using makeid : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 . sysuse auto . dta , clear ( 1978 Automobile Data) . makeid foreign make , gen (uniqueid) project(Demo) (data now sorted by foreign make) (data now sorted by uniqueid) . de uniqueid storage display value variable name type format label variable label ---------------------------------------------------------------------- uniqueid str4 %9s Demo ID: foreign + make . list foreign make uniqueid in 1 / 5 +-------------------------------------+ | foreign make uniqueid | |-------------------------------------| 1 . | Domestic AMC Concord D101 | 2 . | Domestic AMC Pacer D102 | 3 . | Domestic AMC Spirit D103 | 4 . | Domestic Buick Century D104 | 5 . | Domestic Buick Electra D105 | +-------------------------------------+ . list foreign make uniqueid in 53 / 57 +---------------------------------+ | foreign make uniqueid | |---------------------------------| 53 . | Foreign Audi 5000 D201 | 54 . | Foreign Audi Fox D202 | 55 . | Foreign BMW 320i D203 | 56 . | Foreign Datsun 200 D204 | 57 . | Foreign Datsun 210 D205 | +---------------------------------+ makeid creates a unique ID for every observation in the dataset, based on strata-type variables. For example, given a variable list such as country state district name , a unique ID is returned for every observation such that: Country code in the ID is fully unique State code in the ID is unique within country District code in the ID is unique within country and state Each name has a unique ID within country, state, and district. makeid prefixes each ID with the first letter of the project name, as a best practice to prevent against automatic conversion to numbers in Excel for example. makeid is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like makeid , be sure to visit my homepage and Stata boilerplate code .","title":"Unique IDs"},{"location":"stata-code/makeid/#unique-ids","text":"Making best-practice unique IDs in Stata is now easy! Here's an example using makeid : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 . sysuse auto . dta , clear ( 1978 Automobile Data) . makeid foreign make , gen (uniqueid) project(Demo) (data now sorted by foreign make) (data now sorted by uniqueid) . de uniqueid storage display value variable name type format label variable label ---------------------------------------------------------------------- uniqueid str4 %9s Demo ID: foreign + make . list foreign make uniqueid in 1 / 5 +-------------------------------------+ | foreign make uniqueid | |-------------------------------------| 1 . | Domestic AMC Concord D101 | 2 . | Domestic AMC Pacer D102 | 3 . | Domestic AMC Spirit D103 | 4 . | Domestic Buick Century D104 | 5 . | Domestic Buick Electra D105 | +-------------------------------------+ . list foreign make uniqueid in 53 / 57 +---------------------------------+ | foreign make uniqueid | |---------------------------------| 53 . | Foreign Audi 5000 D201 | 54 . | Foreign Audi Fox D202 | 55 . | Foreign BMW 320i D203 | 56 . | Foreign Datsun 200 D204 | 57 . | Foreign Datsun 210 D205 | +---------------------------------+ makeid creates a unique ID for every observation in the dataset, based on strata-type variables. For example, given a variable list such as country state district name , a unique ID is returned for every observation such that: Country code in the ID is fully unique State code in the ID is unique within country District code in the ID is unique within country and state Each name has a unique ID within country, state, and district. makeid prefixes each ID with the first letter of the project name, as a best practice to prevent against automatic conversion to numbers in Excel for example. makeid is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like makeid , be sure to visit my homepage and Stata boilerplate code .","title":"Unique IDs"},{"location":"stata-code/outwrite/","text":"Regression tables outwrite reads multiple regressions saved with estimates store , consolidates them into a single table, and exports the results to a .xlsx, .xls, .csv, or .tex file: 1 2 3 4 5 6 7 8 9 10 11 12 sysuse auto.dta, clear reg price i.foreign##c.mpg est sto reg1 reg price i.foreign##c.mpg##i.rep78 est sto reg2 estadd scalar h = 4 reg price i.rep78 est sto reg3 estadd scalar h = 2.5 outwrite reg1 reg2 reg3 using \"test.xlsx\" /// , stats(N r2 h) replace col(\"TEST\" \"(2)\") drop(i.rep78) format(%9.3f) Alternatively, as a programming command, it will accept a single matrix and print that; it will also look for matrix_STARS and affix that number of stars to each cell. Syntax 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 outwrite estimates_1 estimates_2 [...] using /path/to/output.[xlsx|xls|csv|tex] , [replace stats() drop (varlist)] [tstat|pvalue] [format(format)] [sheet(sheetname [,replace]) modify] [rownames( \"list\" \"of\" \"names\" ) colnames( \"list\" \"of\" \"names\" )] ------------------------------------------------------------------------------------------ Options replace Allows outwrite to overwrite the output file . stats() Adds statistics from e () at the bottom of the table , such as N, r2, or scalars added by estadd. drop (varlist) Suppresses reporting of all variables in in varlist from the output. This can be a factor variable list . tstat|pvalue Reports T-statistics or P-values in regression table , instead of the default standard errors. format (format) Format the table values. By default this is % 9. 2f. sheet() Place results in a target sheet if using .xlsx format . modify Allows outwrite to modify the output file . Often required with sheet() to work as expected. rownames() Manually renames rows of output. By default, the rows are named to reflect the variables in the estimation command. colnames() Manually renames columns of output. By default, the columns are named to reflect the saved equation names. -------------------------------------------------------------------------------------- Note: if used to export a matrix , stats(), drop (), and tstat|pvalue will not be accepted. Acknowledgments While the concept of outwrite is original, we borrowed core functionality from xml_tab by Zurab Sajaia and Michael Lokshin, and many ideas from such programs as estout by Ben Jann, outreg by John Luke Gallup, outreg2 by Roy Wada, modltbl by John H. Tyler, mktab by Nicholas Winter, outtex by Antoine Terracol, and est2tex by Marc Muendler. outwrite is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like outwrite , be sure to visit my homepage and Stata boilerplate code .","title":"Regression tables"},{"location":"stata-code/outwrite/#regression-tables","text":"outwrite reads multiple regressions saved with estimates store , consolidates them into a single table, and exports the results to a .xlsx, .xls, .csv, or .tex file: 1 2 3 4 5 6 7 8 9 10 11 12 sysuse auto.dta, clear reg price i.foreign##c.mpg est sto reg1 reg price i.foreign##c.mpg##i.rep78 est sto reg2 estadd scalar h = 4 reg price i.rep78 est sto reg3 estadd scalar h = 2.5 outwrite reg1 reg2 reg3 using \"test.xlsx\" /// , stats(N r2 h) replace col(\"TEST\" \"(2)\") drop(i.rep78) format(%9.3f) Alternatively, as a programming command, it will accept a single matrix and print that; it will also look for matrix_STARS and affix that number of stars to each cell.","title":"Regression tables"},{"location":"stata-code/outwrite/#syntax","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 outwrite estimates_1 estimates_2 [...] using /path/to/output.[xlsx|xls|csv|tex] , [replace stats() drop (varlist)] [tstat|pvalue] [format(format)] [sheet(sheetname [,replace]) modify] [rownames( \"list\" \"of\" \"names\" ) colnames( \"list\" \"of\" \"names\" )] ------------------------------------------------------------------------------------------ Options replace Allows outwrite to overwrite the output file . stats() Adds statistics from e () at the bottom of the table , such as N, r2, or scalars added by estadd. drop (varlist) Suppresses reporting of all variables in in varlist from the output. This can be a factor variable list . tstat|pvalue Reports T-statistics or P-values in regression table , instead of the default standard errors. format (format) Format the table values. By default this is % 9. 2f. sheet() Place results in a target sheet if using .xlsx format . modify Allows outwrite to modify the output file . Often required with sheet() to work as expected. rownames() Manually renames rows of output. By default, the rows are named to reflect the variables in the estimation command. colnames() Manually renames columns of output. By default, the columns are named to reflect the saved equation names. -------------------------------------------------------------------------------------- Note: if used to export a matrix , stats(), drop (), and tstat|pvalue will not be accepted.","title":"Syntax"},{"location":"stata-code/outwrite/#acknowledgments","text":"While the concept of outwrite is original, we borrowed core functionality from xml_tab by Zurab Sajaia and Michael Lokshin, and many ideas from such programs as estout by Ben Jann, outreg by John Luke Gallup, outreg2 by Roy Wada, modltbl by John H. Tyler, mktab by Nicholas Winter, outtex by Antoine Terracol, and est2tex by Marc Muendler. outwrite is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like outwrite , be sure to visit my homepage and Stata boilerplate code .","title":"Acknowledgments"},{"location":"stata-code/statflow/","text":"Flow charts Creating flow charts in Stata is now easy! Given an Excel spreadsheet with columns A, B, C, and D titled \u201clogic\u201d, \u201cvar\u201d, \u201cstat\u201d and \u201cvalue\u201d, respectively, statflow replaces the \u201cvalue\u201d column with the requested statistic for the observations in the dataset that fit the condition expressed in \u201clogic\u201d. This allows for the creation of dynamically updating custom tables and flowcharts. Here's an example: 1 2 3 4 5 // Set up a flowchart: statflow template using \"/path/to/file.xlsx\" , [replace] // Fill it out, then get all the requested statistics: statflow using \"/path/to/file.xlsx\" [if] [in] statflow is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like statflow , be sure to visit my homepage and Stata boilerplate code .","title":"Flow charts"},{"location":"stata-code/statflow/#flow-charts","text":"Creating flow charts in Stata is now easy! Given an Excel spreadsheet with columns A, B, C, and D titled \u201clogic\u201d, \u201cvar\u201d, \u201cstat\u201d and \u201cvalue\u201d, respectively, statflow replaces the \u201cvalue\u201d column with the requested statistic for the observations in the dataset that fit the condition expressed in \u201clogic\u201d. This allows for the creation of dynamically updating custom tables and flowcharts. Here's an example: 1 2 3 4 5 // Set up a flowchart: statflow template using \"/path/to/file.xlsx\" , [replace] // Fill it out, then get all the requested statistics: statflow using \"/path/to/file.xlsx\" [if] [in] statflow is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like statflow , be sure to visit my homepage and Stata boilerplate code .","title":"Flow charts"},{"location":"stata-code/sumstats/","text":"Summary statistics tables Making tables of summary statistics with Stata is now easy! Here's an example using sumstats : 1 2 3 4 5 sysuse auto . dta , clear sumstats /// (price mpg if foreign == 0 ) /// (price displacement length if foreign == 1 ) /// using \"test.xlsx\" , replace stats(mean sd) sumstats is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like sumstats , be sure to visit my homepage and Stata boilerplate code .","title":"Summary statistics tables"},{"location":"stata-code/sumstats/#summary-statistics-tables","text":"Making tables of summary statistics with Stata is now easy! Here's an example using sumstats : 1 2 3 4 5 sysuse auto . dta , clear sumstats /// (price mpg if foreign == 0 ) /// (price displacement length if foreign == 1 ) /// using \"test.xlsx\" , replace stats(mean sd) sumstats is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like sumstats , be sure to visit my homepage and Stata boilerplate code .","title":"Summary statistics tables"},{"location":"stata-code/txt2qr/","text":"QR codes Making QR codes with Stata is now easy! Here's an example using txt2qr : 1 txt2qr this is a test using \"test.png\" , replace txt2qr saves a QR code containing text to the location specified in using. The file extension .png is recommended. Spaces and special characters are not currently supported in text. Internet connection is required. txt2qr is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like txt2qr , be sure to visit my homepage and Stata boilerplate code .","title":"QR codes"},{"location":"stata-code/txt2qr/#qr-codes","text":"Making QR codes with Stata is now easy! Here's an example using txt2qr : 1 txt2qr this is a test using \"test.png\" , replace txt2qr saves a QR code containing text to the location specified in using. The file extension .png is recommended. Spaces and special characters are not currently supported in text. Internet connection is required. txt2qr is coming soon to SSC and is open for development on GitHub . Submit bugs and feature requests here . If you like txt2qr , be sure to visit my homepage and Stata boilerplate code .","title":"QR codes"}]}